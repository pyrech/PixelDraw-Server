<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_categories</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = false;
wait_word = false
admin = HTML5_am_I_admin()
//show_message("am I admin ? :"+admin)
cat=""
cat_id=""
idx = 0
nb_cat=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not admin {exit;}

if wait_word {
  must_draw = HTML5_get_current_word()
  if must_draw != ""{
    global.word = must_draw;
    //room_goto(room_game);
  }
  exit
}

if ready {
  if mouse_check_button_pressed(mb_any){
    if point_distance(mouse_x,mouse_y,x+112,y)&lt;64 {
      idx +=1
      idx = idx mod nb_cat
      cat=HTML5_get_the_category_name(idx)
      cat_id=HTML5_get_the_category_id(idx)
    } else if point_distance(mouse_x,mouse_y,x+112,y)&lt;64 {
      idx -=1
      idx = idx mod nb_cat
      cat=HTML5_get_the_category_name(idx)
      cat_id=HTML5_get_the_category_id(idx)
    } else if point_distance(mouse_x,mouse_y,x,y+64)&lt;64 {
      ready = false
      HTML5_get_word(cat_id)
      wait_word = true
    }
  }
  exit;
}

if HTML5_is_category_list_ready(){
  nb_cat= HTML5_get_nb_categories()
  if nb_cat&gt;1 {
  ready = true;
  cat=HTML5_get_the_category_name(0)
  cat_id=HTML5_get_the_category_id(0)
  idx = 0
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not admin) {
  draw_sprite(spr_pick_category,1,160,100)
  exit
} else {
  draw_sprite(spr_pick_category,2,160,100)
}

draw_set_color(c_white)
if ready {
  draw_sprite(sprite_index,1,x-112,y)
  draw_set_color(c_white)
  draw_sprite(sprite_index,2,x+112,y)
  draw_sprite(spr_btn_ok,0,x,y+64)
}

draw_rectangle(x-64,y-32,x+64,y+32,false) 
draw_set_color(c_black)
draw_text(x,y,cat)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
